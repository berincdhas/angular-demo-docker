name: angular-cicd-deployment

on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main
      - 'release/*'
  workflow_dispatch:

concurrency:
  group: angular-cicd-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build-test:
    name: Build & Test Angular App
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm test -- --no-watch --no-progress --browsers=ChromeHeadless
      - name: Build Angular app
        run: npm run build -- --configuration=production
      - name: Upload production build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-app
          path: dist/
      - name: Upload Dockerfile
        uses: actions/upload-artifact@v4
        with:
          name: dockerfile
          path: Dockerfile

  docker-build-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: build-test
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-app
          path: dist/
      - name: Download Dockerfile
        uses: actions/download-artifact@v4
        with:
          name: dockerfile
          path: .
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Image digest
        run: echo "Image pushed with digest ${{ steps.meta.outputs.digest }}"

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: docker-build-push
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - name: Deploy application to production platform
        id: deploy
        run: |
          echo "Implement deployment steps here (e.g., trigger deployment via SSH, cloud CLI, or API)."
          echo "deployment-url=https://your-production-url.example.com" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Add other necessary secrets for production deployment

  dependabot-automerge:
    name: Dependabot Auto-merge
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Auto-approve
        uses: hmarr/auto-approve-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Auto-merge Dependabot PRs
        uses: fastify/merge-dependabot@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
