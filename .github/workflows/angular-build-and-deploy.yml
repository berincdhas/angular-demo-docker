name: angular-build-and-deploy

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    branches:
      - main
      - release/*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  build:
    name: Build Angular App
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

      - name: Run Tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless

      - name: Build Project
        run: npm run build -- --configuration=production

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/

  dockerize:
    name: Build and Push Docker Image
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Download Angular Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_PATH=dist/

  deploy:
    name: Deploy Application
    needs: dockerize
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    environment:
      name: Production
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Download Angular Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Deploy to Server (Placeholder)
        id: deploy
        env:
          SERVER_HOST: ${{ secrets.DEPLOY_HOST }}
          SERVER_USERNAME: ${{ secrets.DEPLOY_USER }}
          SERVER_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
          DOCKER_IMAGE: ghcr.io/${{ github.repository }}:latest
        run: |
          echo "This is a placeholder for your production deployment step."
          # Example ssh + docker pull/run (uncomment and adjust as necessary):
          # echo "$SERVER_KEY" > private_key.pem
          # chmod 600 private_key.pem
          # ssh -i private_key.pem -o StrictHostKeyChecking=no $SERVER_USERNAME@$SERVER_HOST "docker pull $DOCKER_IMAGE && docker stop angular-app || true && docker rm angular-app || true && docker run -d --name angular-app -p 80:80 $DOCKER_IMAGE"
          # rm private_key.pem

      - name: Set Deployment URL (Placeholder)
        id: set-url
        run: echo "url=https://your.production.url/" >> $GITHUB_OUTPUT

  codeql:
    name: CodeQL Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      actions: read
      contents: read
      security-events: write
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') || github.event_name == 'pull_request'
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
