name: angular-build-and-deploy

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

concurrency:
  group: angular-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: write
  deployments: write

jobs:
  build:
    name: Build Angular Application
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Build project
        run: npm run build -- --configuration production

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/

  dockerize:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
    timeout-minutes: 20
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}/angular-app
      TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:$TAG -f Dockerfile .

      - name: Push Docker image
        run: docker push $IMAGE_NAME:$TAG

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: dockerize
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
    timeout-minutes: 15
    environment:
      name: production
      url: ${{ steps.deploy-to-production.outputs.deployment_url }}
    steps:
      - name: Deploy to Production Server
        id: deploy-to-production
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            docker pull ghcr.io/${{ github.repository }}/angular-app:${{ github.sha }}
            docker stop angular-app || true
            docker rm angular-app || true
            docker run -d --restart always \
              --name angular-app \
              -p 80:80 \
              ghcr.io/${{ github.repository }}/angular-app:${{ github.sha }}

  security:
    name: Security and Code Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Setup Node.js for audit
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies for audit
        run: npm ci

      - name: Run npm audit
        run: npm audit --production --audit-level=high || true
