name: angular-build-and-deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-angular-app:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

      - name: Run Tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Build Angular App
        run: npm run build -- --configuration production

      - name: Upload Production Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  docker-build-and-push:
    needs: build-angular-app
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Production Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:latest

  deploy-to-production:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Deploy to Production Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << EOF
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
            docker pull $DOCKERHUB_USERNAME/angular-demo-docker:latest
            docker stop angular-demo-docker || true
            docker rm angular-demo-docker || true
            docker run -d --name angular-demo-docker -p 80:80 $DOCKERHUB_USERNAME/angular-demo-docker:latest
          EOF
          rm -f private_key

  security-scan:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Autobuild (with fallback)
        id: autobuild
        continue-on-error: true
        uses: github/codeql-action/autobuild@v3

      - name: Fallback Manual Build (if autobuild failed)
        if: steps.autobuild.outcome != 'success'
        run: |
          npm ci
          npm run build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:javascript'

  upload-codeql-results:
    needs: security-scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    if: always()
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download SARIF results
        run: |
          if [ -f ./results.sarif ]; then
            echo "SARIF file exists"
          else
            echo "No SARIF result found" > /dev/null
          fi

      - name: Upload CodeQL database and results
        if: hashFiles('**/results.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ github.workspace }}/results.sarif
