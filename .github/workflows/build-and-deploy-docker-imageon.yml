name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js (Assuming Node 18.x for Angular)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Cache npm dependencies for faster builds
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Lint the code (assumes a lint script exists)
      - name: Lint
        run: npm run lint

      # Run tests (will pass if test script defined; optional)
      - name: Run tests
        run: npm test -- --watch=false --browsers=ChromeHeadless
        continue-on-error: true # Comment: If no tests are present, this step will not fail the workflow

      # Build Angular app
      - name: Build Angular app
        run: npm run build -- --configuration production

      # Log in to GHCR (GitHub Container Registry)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build Docker image (assumes Dockerfile in project root or adjust path if needed)
      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # Push Docker image to registry (only on main branch)
      - name: Push Docker image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # Optional: Output image digest
      - name: Image digest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Image Digest:"
          docker inspect --format='{{index .RepoDigests 0}}' ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

# Comments/Assumptions:
# - Assumes the default Angular project structure.
# - Assumes lint and test npm scripts are present. If not, adjust or remove those steps.
# - Uses GitHub Container Registry (ghcr.io). Change to Docker Hub or another registry if needed.
# - Uses GitHub Actions-provided GITHUB_TOKEN for authentication (sufficient for ghcr.io).
# - Only pushes Docker images for main branch pushes for safety.
# - Adjust Node.js version or Dockerfile path as needed.
# - Caches NPM dependencies for faster builds.
# - Uses Docker image tags for both the commit SHA and 'latest'.
