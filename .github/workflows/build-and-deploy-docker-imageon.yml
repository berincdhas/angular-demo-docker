name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: angulardemodocker
  REGISTRY: ghcr.io
  DOCKERFILE_PATH: ./Dockerfile
  BUILD_CONTEXT: .
  DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
  DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
  DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: vars
        run: |
          echo "VERSION=$(date +%Y%m%d%H%M%S)-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ github.repository }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add SSH host key
        run: |
          ssh-keyscan -H ${{ env.DEPLOY_SERVER }} >> ~/.ssh/known_hosts

      - name: Pull and run Docker image on remote server
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ github.repository }}:latest
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.DEPLOY_USER }}@${{ env.DEPLOY_SERVER }} << EOF
            docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
            docker pull $IMAGE
            docker stop angulardemodocker || true
            docker rm angulardemodocker || true
            docker run -d --name angulardemodocker -p 80:80 $IMAGE
          EOF

