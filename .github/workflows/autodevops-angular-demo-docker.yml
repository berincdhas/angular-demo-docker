name: autodevops angular demo docker build deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: autodevops-angular-demo-docker-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless --no-progress --code-coverage

    continue-on-error: false

  codeql:
    name: Code Scanning - CodeQL (javascript)
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: ${{ needs.test.result == 'success' }}

    steps:
      - uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  build:
    name: Build Angular App and Docker Image
    needs: [test, codeql]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: ${{ needs.test.result == 'success' && needs.codeql.result == 'success' }}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: npm install

      - name: Build Angular app
        run: npm run build -- --configuration=production

      - name: Login to Docker Registry
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
        run: echo "${DOCKER_REGISTRY_PASSWORD}" | docker login "${DOCKER_REGISTRY}" -u "${DOCKER_REGISTRY_USERNAME}" --password-stdin

      - name: Build Docker image
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
        run: docker build -t "${DOCKER_REGISTRY}/angular-demo-docker:${{ github.sha }}" .

      - name: Push to Docker Registry
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
        run: docker push "${DOCKER_REGISTRY}/angular-demo-docker:${{ github.sha }}"

  deploy:
    name: Deploy to Docker Host
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: ${{ needs.build.result == 'success' }}

    steps:
      - name: SSH and Deploy on Docker Host
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DOCKER_HOST }}
          username: ${{ secrets.DOCKER_HOST_USER }}
          key: ${{ secrets.DOCKER_HOST_SSH_KEY }}
          script: |
            docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} -p ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
            docker pull ${{ secrets.DOCKER_REGISTRY }}/angular-demo-docker:${{ github.sha }}
            docker stop angular-demo-docker || true
            docker rm angular-demo-docker || true
            docker run -d --name angular-demo-docker -p 80:80 ${{ secrets.DOCKER_REGISTRY }}/angular-demo-docker:${{ github.sha }}
