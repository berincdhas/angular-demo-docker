name: build-and-deploy-angular-app

on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - main
      - 'releases/**'
  workflow_dispatch:

concurrency:
  group: build-and-deploy-angular-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  actions: read
  security-events: write

jobs:
  security:
    name: Security Code Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build:
    name: Build Angular App
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: security
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Lint code
        run: npm run lint

      - name: Build production
        run: npm run build -- --configuration=production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/

  dockerize:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download Angular build artifacts
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:latest,${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:${{ steps.vars.outputs.sha_short }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: dockerize
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: ${{ steps.deploy-app.outputs.deployment_url }}
    steps:
      - name: Deploy application
        id: deploy-app
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:latest

      - name: Output deployment URL
        run: echo "Application deployed to ${{ steps.deploy-app.outputs.deployment_url }}"