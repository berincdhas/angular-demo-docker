name: build-and-deploy-angular-app
on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - main
      - 'releases/**'
  workflow_dispatch:
concurrency:
  group: build-and-deploy-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    name: Build & Test Angular App
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      actions: read
      security-events: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run Unit Tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless

      - name: Run Security Audit
        run: npm audit --production --audit-level=high

      - name: Build Angular App
        run: npm run build -- --configuration=production --output-path=dist

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Upload Code Scanning Results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: /tmp/codeql-results.sarif
        continue-on-error: true

  docker-build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/releases/')
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}/angular-demo-app
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Angular Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          build-args: |
            APP_DIST=dist
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/angular-demo-app:latest
            ghcr.io/${{ github.repository_owner }}/angular-demo-app:${{ github.sha }}

  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 15
    permissions:
      id-token: write
      contents: read
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deployment_url }}
    steps:
      - name: Deploy Application
        id: deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            docker pull ghcr.io/${{ github.repository_owner }}/angular-demo-app:latest
            docker stop angular-demo-app || true
            docker rm angular-demo-app || true
            docker run -d --name angular-demo-app -p 80:80 ghcr.io/${{ github.repository_owner }}/angular-demo-app:latest
          envs: DEPLOY_HOST,DEPLOY_USER,DEPLOY_SSH_KEY

      - name: Output Deployment URL
        run: echo "deployment_url=https://${{ secrets.PROD_DOMAIN }}" >> $GITHUB_OUTPUT

  codeql:
    name: CodeQL Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [javascript]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  dependabot:
    name: Scan for Dependency Vulnerabilities
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Dependabot Alert Check
        uses: advanced-security/dep-scan-action@v1
        with:
          fail-on-severity: high
