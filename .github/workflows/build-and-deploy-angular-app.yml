name: build-and-deploy-angular-app

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

concurrency:
  group: build-and-deploy-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: write
  actions: read

jobs:
  code-scan:
    name: Code Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build:
    name: Build Angular App
    runs-on: ubuntu-latest
    needs: code-scan
    timeout-minutes: 15
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless --no-progress --code-coverage

      - name: Build production
        run: npm run build -- --configuration production

      - name: Archive production artifact
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/

  dockerize:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    timeout-minutes: 15
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: dockerize
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    timeout-minutes: 10
    environment: production
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Deploy using Docker image
        run: |
          echo "Insert deployment steps here. For example, update your k8s manifests, run SSH commands or call deploy APIs."
          # Example (replace this):
          # kubectl set image deployment/app app=$REGISTRY/$IMAGE_NAME:latest
        env:
          REGISTRY: ghcr.io
          IMAGE_NAME: ${{ github.repository }}
          DOCKER_DEPLOY_TOKEN: ${{ secrets.DOCKER_DEPLOY_TOKEN }}
          # Add more secrets/envs as required for your hosting

  dependabot:
    name: Dependency Review
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'pull_request'
    steps:
      - name: Dependency Review
        uses: actions/dependency-review-action@v4

  security:
    name: Secret Scanning Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Secret scanning check
        uses: github/secret-scanning-action@v2
        with:
          path: .
