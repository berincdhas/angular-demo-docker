name: autodevops-angular-demo-docker-deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: autodevops-angular-demo-docker-deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    name: Build Angular App
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

      - name: Run Unit Tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Build Project
        run: npm run build -- --configuration=production

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/

  dockerize:
    name: Build and Push Docker Image
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          build-args: |
            DIST_DIR=dist/
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

  deploy:
    name: Deploy to Production
    needs: dockerize
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Pull Docker Image
        run: docker pull ghcr.io/${{ github.repository }}:latest

      # Example placeholder deployment step; replace or extend for your infra
      - name: Deploy (Placeholder)
        run: echo "Deploying ghcr.io/${{ github.repository }}:latest to production..."

  code-scanning:
    name: Security Code Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
