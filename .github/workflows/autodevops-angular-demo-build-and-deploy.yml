name: angular-demo-build-and-deploy
on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    branches:
      - main
      - 'release/**'
  workflow_dispatch:

concurrency:
  group: angular-build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  deployments: write
  actions: read

jobs:
  code-scan:
    name: Code Scanning (CodeQL)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build:
    name: Build Angular App & Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: code-scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Run unit tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      - name: Build Angular app
        run: npm run build -- --configuration production
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/angular-demo-docker:${{ github.sha }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download deployment manifest
        run: echo "apiVersion: v1" > manifest.yaml
      - name: Deploy to Kubernetes (placeholder)
        id: deploy
        run: |
          echo "Pretending to deploy Docker image: ghcr.io/${{ github.repository_owner }}/angular-demo-docker:${{ github.sha }}"
          echo "url=https://example.com" >> "$GITHUB_OUTPUT"

  notify:
    name: Notify on Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: deploy
    if: ${{ always() && github.ref == 'refs/heads/main' }}
    steps:
      - name: Send deployment notification
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "Angular application successfully deployed from commit <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
