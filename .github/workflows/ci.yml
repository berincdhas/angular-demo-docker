name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the source code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache node_modules for faster installs
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Install npm dependencies
      - name: Install dependencies
        run: npm ci

      # Lint Angular project
      - name: Lint Angular project
        run: npm run lint

      # Run tests with Angular
      - name: Run Angular tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      # Build Angular app for production
      - name: Build Angular project
        run: npm run build -- --configuration production

      # Cache docker layers for faster builds
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Set up Docker Buildx (enables advanced build features and caching)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      # Scan Docker image for vulnerabilities using Aqua Trivy
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@v0.16.1
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:latest

      # Push Docker image to Docker Hub
      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
