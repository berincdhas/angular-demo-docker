name: build-and-deploy-angular-app

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    branches:
      - main
      - 'release/**'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  actions: read

concurrency:
  group: build-and-deploy-angular-app-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint Angular Code
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint

  test:
    name: Run Angular Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  build:
    name: Build Angular App
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build Angular app
        run: npm run build -- --configuration=production
      - name: Archive production build
        uses: actions/upload-artifact@v4
        with:
          name: production-dist
          path: dist/

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository_owner }}/angular-demo-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download production build
        uses: actions/download-artifact@v4
        with:
          name: production-dist
          path: dist/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/angular-demo-docker:latest
            ghcr.io/${{ github.repository_owner }}/angular-demo-docker:${{ github.sha }}
          build-args: |
            BUILD_DIRECTORY=dist/
      - name: Image Digest
        run: echo "Digest is ${{ steps.build-and-push-image.outputs.digest }}"

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: docker
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: ${{ steps.deploy-to-prod.outputs.url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy to Server
        id: deploy-to-prod
        run: |
          echo "Simulated deployment step - replace with your real deployment (Kubernetes, VM, etc.)."

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
