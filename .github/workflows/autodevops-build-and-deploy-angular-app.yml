name: build-and-deploy-angular-app

on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main
      - 'release/*'
  workflow_dispatch:

concurrency:
  group: build-and-deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  id-token: write
  actions: read
  checks: write

jobs:
  build:
    name: Build Angular Application
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

      - name: Run Unit Tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless

      - name: Build Production Artifacts
        run: npm run build -- --configuration production

      - name: Upload Production Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  dockerize:
    name: Build & Push Docker Image
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Production Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          build-args: |
            NG_BUILD_PATH=dist
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Upload Docker Image Digest
        run: echo "${{ steps.meta.outputs.digest }}" > docker-image-digest.txt
      - name: Upload Digest Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-digest
          path: docker-image-digest.txt

  deploy:
    name: Deploy to Production
    needs: dockerize
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deployment_url }}
    steps:
      - name: Download Docker Image Digest
        uses: actions/download-artifact@v4
        with:
          name: docker-image-digest

      - name: Set up Docker CLI
        uses: docker/setup-buildx-action@v3

      - name: Deploy to Docker Host
        id: deploy
        env:
          DOCKER_HOST: ${{ secrets.PRODUCTION_DOCKER_HOST }}
          DOCKER_TLS_VERIFY: ${{ secrets.PRODUCTION_DOCKER_TLS_VERIFY }}
          DOCKER_CERT_PATH: ${{ secrets.PRODUCTION_DOCKER_CERT_PATH }}
          IMAGE_TAG: ghcr.io/${{ github.repository }}:latest
        run: |
          docker --version
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker pull $IMAGE_TAG
          docker stop angular-app || true
          docker rm angular-app || true
          docker run -d --name angular-app -p 80:80 $IMAGE_TAG
          echo "deployment_url=http://your.prod.server/" >> $GITHUB_OUTPUT

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
