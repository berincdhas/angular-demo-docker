name: build-and-deploy-angular-app

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

concurrency:
  group: build-and-deploy-angular-app-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  actions: read

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
        env:
          NODE_OPTIONS: --max-old-space-size=4096
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

  build:
    name: Build
    needs: lint-and-test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Build Angular App
        run: npm run build -- --configuration production
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/

  docker-build-and-push:
    name: Docker Build and Push
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:latest
          build-args: |
            APP_DIST=dist/

  deploy:
    name: Deploy to Production
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deployment-url }}
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PRODUCTION_SERVER_SSH_KEY }}
      - name: Deploy Application Container
        id: deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.PRODUCTION_SERVER_USER }}@${{ secrets.PRODUCTION_SERVER_HOST }} '
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:latest &&
            docker stop angular-demo-docker || true &&
            docker rm angular-demo-docker || true &&
            docker run -d --name angular-demo-docker -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:latest
          '
          echo "deployment-url=https://${{ secrets.PRODUCTION_SERVER_HOST }}" >> $GITHUB_OUTPUT

  security-code-scan:
    name: Security Code Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      security-events: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
