name: Build and Deploy Angular App Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: berincdhas/angular-demo-docker

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.image_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies (with caching)
        run: npm install

      - name: Cache Angular build output
        uses: actions/cache@v4
        with:
          path: dist/
          key: dist-${{ github.sha }}
          restore-keys: |
            dist-

      - name: Build Angular application
        run: npm run build -- --configuration production

      - name: Extract short SHA for tag
        id: meta
        run: echo "image_tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/

  docker:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: docker-cache-${{ github.sha }}
          restore-keys: |
            docker-cache-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ needs.build.outputs.image_tag }},${{ env.IMAGE_NAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo "Image published with tags: ${{ env.IMAGE_NAME }}:${{ needs.build.outputs.image_tag }} and :latest"

# Secrets/inputs required for deployment:
# - DOCKERHUB_USERNAME: Docker Hub username (repository or org owner)
# - DOCKERHUB_TOKEN: Docker Hub personal access token with push permissions
