name: autodevops-angular-demo-docker-build-deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: autodevops-angular-demo-docker-build-deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  lint-and-test:
    name: Lint and Test Angular App
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Lint Code
        run: npm run lint
      - name: Run Unit Tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./coverage/
  build:
    name: Angular Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: lint-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Build Angular App
        run: npm run build
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
  docker-build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: build
    if: github.ref == 'refs/heads/main'
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Download Angular Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Authenticate to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          build-args: |
            DIST_FOLDER=dist
      - name: Image Digest
        run: echo "Image built and pushed: $IMAGE_NAME"
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: docker-build-push
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Deploy (Placeholder)
        run: echo "Deploy step - replace this with your deployment logic"
      - name: Cleanup Artifacts
        if: always()
        run: rm -rf dist

  code-scanning:
    name: CodeQL Static Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
