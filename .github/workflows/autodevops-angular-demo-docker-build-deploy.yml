name: autodevops-angular-demo-docker-build-deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options:
          - "dev"
          - "stage"
          - "prod"
      image_tag:
        description: "Docker image tag"
        required: false
        default: ""
      manual_build:
        description: "Manually trigger Docker build"
        required: false
        default: "false"
        type: boolean

env:
  REGISTRY_URL: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: autodevops-angular-demo-docker-build-deploy-${{ github.ref }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    if: (github.event_name != 'workflow_dispatch') || (github.event_name == 'workflow_dispatch' && github.event.inputs.manual_build == 'true')
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker image tag
        id: extract_tag
        run: |
          if [ "${{ github.event.inputs.image_tag || '' }}" != "" ]; then
            echo "tag=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ steps.extract_tag.outputs.tag }}

  deploy:
    name: Deploy to ${{ github.event.inputs.environment || 'dev' }}
    runs-on: ubuntu-latest
    needs: build-and-push
    timeout-minutes: 20
    if: |
      (github.event_name != 'workflow_dispatch') ||
      (github.event_name == 'workflow_dispatch' && contains(fromJson('["dev","stage","prod"]'), github.event.inputs.environment))
    steps:
      - name: Set Environment Variables
        run: |
          echo "DEPLOY_ENVIRONMENT=${{ github.event.inputs.environment || 'dev' }}" >> $GITHUB_ENV
          if [ "${{ github.event.inputs.image_tag || '' }}" != "" ]; then
            echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV
          fi

      - name: Checkout Deployment Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}

      - name: Dummy Deploy Step
        run: |
          echo "Deploying ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG} to ${DEPLOY_ENVIRONMENT}"

  code-scanning:
    name: CodeQL Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      security-events: write
      actions: read
      contents: read
    if: github.event_name != 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
