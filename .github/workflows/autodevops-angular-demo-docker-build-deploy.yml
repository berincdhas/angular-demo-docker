name: autodevops-angular-demo-docker-build-deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: autodevops-angular-demo-docker-build-deploy-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build Angular Application
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint --if-present
      - name: Run tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI --code-coverage
        env:
          CHROME_BIN: /usr/bin/google-chrome
      - name: Build Angular app
        run: npm run build -- --configuration=production
      - name: Upload production build artifact
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/
          retention-days: 3

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Download production build artifact
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/
      - name: Log in to GitHub Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract repository name
        id: repo
        run: echo "REPO_LOWER=$(echo ${{ github.repository }} | tr 'A-Z' 'a-z')" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.repo.outputs.REPO_LOWER }}:latest
            ghcr.io/${{ steps.repo.outputs.REPO_LOWER }}:${{ github.sha }}
          build-args: |
            BUILD_ENV=production
      - name: Image digest
        run: echo "Digest: ${{ steps.docker_build.outputs.digest }}"

  deploy:
    name: Deploy to Environment
    runs-on: ubuntu-latest
    needs: docker
    timeout-minutes: 10
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    environment:
      name: production
      url: ${{ steps.deploy-env.outputs.deployment_url }}
    permissions:
      contents: read
      deployments: write
      id-token: write
    steps:
      - name: Set deployment output placeholder
        id: deploy-env
        run: echo "deployment_url=https://your-deployment-url.example" >> "$GITHUB_OUTPUT"

  codeql:
    name: Code Scanning - CodeQL
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      actions: read
      contents: read
      security-events: write
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3