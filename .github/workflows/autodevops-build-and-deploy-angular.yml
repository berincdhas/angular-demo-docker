name: build-and-deploy-angular

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

concurrency:
  group: build-and-deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  actions: read

jobs:
  build:
    name: Build Angular Application
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run security audit
        run: npm audit --audit-level=high
      - name: Run lint
        run: npm run lint
      - name: Run unit tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless --no-progress --code-coverage
      - name: Build Angular app
        run: npm run build -- --configuration=production
      - name: Upload production build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/

  dockerize-and-deploy:
    name: Dockerize and Deploy
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 25
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:${{ github.sha }}
      - name: Deploy to server
        id: deploy
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/angular-demo-docker:${{ github.sha }}
        run: |
          echo "$DEPLOY_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key $DEPLOY_USER@$DEPLOY_HOST "
            docker pull $DOCKER_IMAGE &&
            (docker stop angular-demo || true) &&
            (docker rm angular-demo || true) &&
            docker run -d --name angular-demo -p 80:80 $DOCKER_IMAGE
          "
          echo "deployment-url=http://$DEPLOY_HOST/" >> $GITHUB_OUTPUT

  codeql-security-scan:
    name: CodeQL Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    timeout-minutes: 25
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Install dependencies
        run: npm ci
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
