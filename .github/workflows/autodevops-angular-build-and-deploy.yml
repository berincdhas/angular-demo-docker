name: angular-build-and-deploy

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    branches:
      - main
      - 'release/**'
  workflow_dispatch:

concurrency:
  group: build-and-deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Set up Angular CLI
        run: npm install -g @angular/cli@17

      - name: Install dependencies
        run: npm ci

      - name: Lint the code
        run: npm run lint

      - name: Run unit tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless

      - name: Build Angular app
        run: npm run build -- --configuration=production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angular-build
          path: dist/

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    timeout-minutes: 15
    environment:
      name: production
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: angular-build
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/angular-demo-docker:${{ github.sha }}
          build-args: |
            BUILD_OUTPUT=dist/

      - name: Deploy to production (placeholder)
        id: deploy
        env:
          IMAGE_TAG: ghcr.io/${{ github.repository_owner }}/angular-demo-docker:${{ github.sha }}
        run: echo "Refer to your deployment platform's documentation to deploy IMAGE_TAG"

  codeql:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: read
      security-events: write
    if: github.event_name != 'pull_request' || github.base_ref == 'main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
